<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.graduate.dao.ProfessorMapper">
  <resultMap id="BaseResultMap" type="edu.graduate.bean.Professor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="datetime" jdbcType="TIMESTAMP" property="datetime" />
    <result column="topicKind_id" jdbcType="INTEGER" property="topickindId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="edu.graduate.bean.Professor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    <result column="cotent" jdbcType="LONGVARCHAR" property="cotent" />
  </resultMap>
  
  
  
 
  
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    id, name, datetime, topicKind_id
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    cotent
  </sql>
 
  
  
  
  <select id="selectByExampleWithBLOBs" parameterType="edu.graduate.bean.ProfessorExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from graduate_professor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="edu.graduate.bean.ProfessorExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from graduate_professor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from graduate_professor
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    delete from graduate_professor
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.graduate.bean.ProfessorExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    delete from graduate_professor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.graduate.bean.Professor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    insert into graduate_professor (id, name, datetime, 
      topicKind_id, cotent)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{datetime,jdbcType=TIMESTAMP}, 
      #{topickindId,jdbcType=INTEGER}, #{cotent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.graduate.bean.Professor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    insert into graduate_professor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="datetime != null">
        datetime,
      </if>
      <if test="topickindId != null">
        topicKind_id,
      </if>
      <if test="cotent != null">
        cotent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null">
        #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="topickindId != null">
        #{topickindId,jdbcType=INTEGER},
      </if>
      <if test="cotent != null">
        #{cotent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.graduate.bean.ProfessorExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    select count(*) from graduate_professor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    update graduate_professor
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.datetime != null">
        datetime = #{record.datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.topickindId != null">
        topicKind_id = #{record.topickindId,jdbcType=INTEGER},
      </if>
      <if test="record.cotent != null">
        cotent = #{record.cotent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    update graduate_professor
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      datetime = #{record.datetime,jdbcType=TIMESTAMP},
      topicKind_id = #{record.topickindId,jdbcType=INTEGER},
      cotent = #{record.cotent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    update graduate_professor
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      datetime = #{record.datetime,jdbcType=TIMESTAMP},
      topicKind_id = #{record.topickindId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.graduate.bean.Professor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    update graduate_professor
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null">
        datetime = #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="topickindId != null">
        topicKind_id = #{topickindId,jdbcType=INTEGER},
      </if>
      <if test="cotent != null">
        cotent = #{cotent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="edu.graduate.bean.Professor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    update graduate_professor
    set name = #{name,jdbcType=VARCHAR},
      datetime = #{datetime,jdbcType=TIMESTAMP},
      topicKind_id = #{topickindId,jdbcType=INTEGER},
      cotent = #{cotent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.graduate.bean.Professor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 21 10:16:40 CST 2019.
    -->
    update graduate_professor
    set name = #{name,jdbcType=VARCHAR},
      datetime = #{datetime,jdbcType=TIMESTAMP},
      topicKind_id = #{topickindId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
 <!-- 一对一关联的查询 --> 
 <resultMap type="edu.graduate.bean.Professor" id="professorone">
    <id column="id" property="id"/>
    <result column="name" property="name"/>
    <result column="cotent" property="cotent"/>
    <result column="topicKind_id" property="topickindId"/>
    
    <!-- 关联对象 -->
    <association property="kind" column="topicKind_id" javaType="edu.graduate.bean.TopicKind" select="edu.graduate.dao.TopicKindMapper.selectByPrimaryKey">
        <!-- 关联条件Employee的dept_id对应着Department的id -->
    </association>
</resultMap>

 <!-- 自己写的 -->
  <resultMap extends="BaseResultMap" id="professor" type="edu.graduate.bean.Professor">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="cotent" jdbcType="LONGVARCHAR" property="cotent" />
    <result column="datetime" jdbcType="TIMESTAMP" property="datetime" />
    <result column="topicKind_id" jdbcType="INTEGER" property="topickindId" />
    <association property="kind" column="id" select="edu.graduate.dao.TopicKindMapper.selectByPrimaryKey"></association>
  </resultMap>
  <select id = "selectProfessorByName" resultMap="professor">
  select * from graduate_professor where name = #{name}
  
  </select>
  
  
  <select id = "selectProfessorsByTopicKindId" resultMap="professor">
  	select * from graduate_professor as
		a
		WHERE 6 > (
		select count(*)
		from graduate_professor
		where topicKind_id = a.topicKind_id
		and id > a.id)
		order by a.id desc;
  </select>
  
	  <select id="selectKindByKindId" resultMap="professorone" parameterType="Integer">
	    select * from graduate_professor where id = #{id}
	  </select>
	  
	  <select id="findAll" resultMap="professorone" parameterType="Integer">
	    select * from graduate_professor
	  </select>
  
  
 <!-- 自己写的 --> 
	<select id = "selectProfessorByNameDim"  parameterType="String" resultMap="ResultMapWithBLOBs">
	 select * from graduate_professor where name LIKE '%${ProfessorName}%'
	</select>





  
 
</mapper>