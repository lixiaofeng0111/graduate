<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.graduate.dao.extend.FruitVMMapper">

<!-- 定义结果集==FruitVM -->
	<resultMap type="edu.graduate.bean.extend.FruitVM" id="fruitVM">
		<!-- 基础属性和数据库之间的映射 -->
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="picture" property="picture" />
		<result column="description" property="description" />
		<result column="brief" property="brief" />
		<result column="pregnantEat" property="pregnantEat" />
		<result column="momEat" property="momEat" />
		<result column="babyEat" property="babyEat" />
		
		<association 
			property="reason" 
			column="id" 
			javaType="edu.graduate.bean.Reason"
			select="edu.graduate.dao.ReasonMapper.selectByPrimaryKey" >
		</association>
		<!-- 多对多中的关联属性 -->
		<collection 
			property="nutritions" 
			column="id" 
			javaType="ArrayList"
			select="edu.graduate.dao.extend.NutritionVMMapper.selectNutritionByFruitId" 
			ofType="edu.graduate.bean.Nutrition">
		</collection>

	</resultMap>
	
	<insert id="insertQiao" parameterType="edu.graduate.bean.extend.FruitVM" useGeneratedKeys="true"
		keyProperty="id">
		insert into graduate_fruit(name,picture,brief,description,pregnantEat,momEat,babyEat)
		values(#{name},#{picture},#{brief},#{description},#{pregnantEat},#{momEat},#{babyEat})
	</insert>

	<!-- 根据营养成分Id查询水果信息 -->
	<select id="selectFruitByNutritionId" parameterType="long" resultMap="fruitVM">
		select * from graduate_fruit where id in (
			select fruit_id 
			from graduate_nutritionfruit
			where nutrition_id = #{id}	
		)
	</select>
	
	
	
	<!-- 查询所有水果及其包含的营养信息和孕妇能吃不能吃的信息 -->
	<select id="selectFruitVMByName" parameterType="String" resultMap="fruitVM">
		select * from graduate_fruit where name like '%${fruitName}%'
	</select>
	
	<!-- 查询所有水果及其包含的营养信息 -->
	<select id="selectAllFruitVM" resultMap="fruitVM">
		select * from graduate_fruit
	</select>
	
	<!-- 根据Id查询水果及其包含的营养信息 -->
	<select id="selectFruitVMById" parameterType="long" resultMap="fruitVM">
		select * from graduate_fruit where id = #{id}
	</select>
	
	<!-- 根据关键字查询水果及其包含的营养信息 -->
	<select id="selectFruitVMLikeKeyword" parameterType="String" resultMap="fruitVM">
	select * from graduate_fruit where name like concat('%',#{keyword},'%')
	</select>
	
	
	<!-- 根据Id删除水果及其包含的营养信息 -->
	<delete id="deleteFruitVMById" parameterType="long" >
		delete from graduate_fruit where id = #{id}
	</delete>
	
	<!-- 通过营养的名字查询水果的相关信息 -->
	<select id="selectFruitVMByNutritionName" parameterType="String" resultMap="fruitVM">
		select * from graduate_fruit where id in (
			select fruit_id 
			from graduate_nutritionfruit where nutrition_id in(
				select id from graduate_nutrition where name like '%${nutritionName}%'
			)
		)
	</select>
	
</mapper>
















