package edu.graduate.bean;

import java.util.ArrayList;
import java.util.List;

public class ReasonExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table graduate_reason
     *
     * @mbg.generated Sat May 18 10:47:29 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table graduate_reason
     *
     * @mbg.generated Sat May 18 10:47:29 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table graduate_reason
     *
     * @mbg.generated Sat May 18 10:47:29 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table graduate_reason
     *
     * @mbg.generated Sat May 18 10:47:29 CST 2019
     */
    public ReasonExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table graduate_reason
     *
     * @mbg.generated Sat May 18 10:47:29 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table graduate_reason
     *
     * @mbg.generated Sat May 18 10:47:29 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table graduate_reason
     *
     * @mbg.generated Sat May 18 10:47:29 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table graduate_reason
     *
     * @mbg.generated Sat May 18 10:47:29 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table graduate_reason
     *
     * @mbg.generated Sat May 18 10:47:29 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table graduate_reason
     *
     * @mbg.generated Sat May 18 10:47:29 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table graduate_reason
     *
     * @mbg.generated Sat May 18 10:47:29 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table graduate_reason
     *
     * @mbg.generated Sat May 18 10:47:29 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table graduate_reason
     *
     * @mbg.generated Sat May 18 10:47:29 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table graduate_reason
     *
     * @mbg.generated Sat May 18 10:47:29 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table graduate_reason
     *
     * @mbg.generated Sat May 18 10:47:29 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPregnanteatIsNull() {
            addCriterion("pregnantEat is null");
            return (Criteria) this;
        }

        public Criteria andPregnanteatIsNotNull() {
            addCriterion("pregnantEat is not null");
            return (Criteria) this;
        }

        public Criteria andPregnanteatEqualTo(String value) {
            addCriterion("pregnantEat =", value, "pregnanteat");
            return (Criteria) this;
        }

        public Criteria andPregnanteatNotEqualTo(String value) {
            addCriterion("pregnantEat <>", value, "pregnanteat");
            return (Criteria) this;
        }

        public Criteria andPregnanteatGreaterThan(String value) {
            addCriterion("pregnantEat >", value, "pregnanteat");
            return (Criteria) this;
        }

        public Criteria andPregnanteatGreaterThanOrEqualTo(String value) {
            addCriterion("pregnantEat >=", value, "pregnanteat");
            return (Criteria) this;
        }

        public Criteria andPregnanteatLessThan(String value) {
            addCriterion("pregnantEat <", value, "pregnanteat");
            return (Criteria) this;
        }

        public Criteria andPregnanteatLessThanOrEqualTo(String value) {
            addCriterion("pregnantEat <=", value, "pregnanteat");
            return (Criteria) this;
        }

        public Criteria andPregnanteatLike(String value) {
            addCriterion("pregnantEat like", value, "pregnanteat");
            return (Criteria) this;
        }

        public Criteria andPregnanteatNotLike(String value) {
            addCriterion("pregnantEat not like", value, "pregnanteat");
            return (Criteria) this;
        }

        public Criteria andPregnanteatIn(List<String> values) {
            addCriterion("pregnantEat in", values, "pregnanteat");
            return (Criteria) this;
        }

        public Criteria andPregnanteatNotIn(List<String> values) {
            addCriterion("pregnantEat not in", values, "pregnanteat");
            return (Criteria) this;
        }

        public Criteria andPregnanteatBetween(String value1, String value2) {
            addCriterion("pregnantEat between", value1, value2, "pregnanteat");
            return (Criteria) this;
        }

        public Criteria andPregnanteatNotBetween(String value1, String value2) {
            addCriterion("pregnantEat not between", value1, value2, "pregnanteat");
            return (Criteria) this;
        }

        public Criteria andMomeatIsNull() {
            addCriterion("momEat is null");
            return (Criteria) this;
        }

        public Criteria andMomeatIsNotNull() {
            addCriterion("momEat is not null");
            return (Criteria) this;
        }

        public Criteria andMomeatEqualTo(String value) {
            addCriterion("momEat =", value, "momeat");
            return (Criteria) this;
        }

        public Criteria andMomeatNotEqualTo(String value) {
            addCriterion("momEat <>", value, "momeat");
            return (Criteria) this;
        }

        public Criteria andMomeatGreaterThan(String value) {
            addCriterion("momEat >", value, "momeat");
            return (Criteria) this;
        }

        public Criteria andMomeatGreaterThanOrEqualTo(String value) {
            addCriterion("momEat >=", value, "momeat");
            return (Criteria) this;
        }

        public Criteria andMomeatLessThan(String value) {
            addCriterion("momEat <", value, "momeat");
            return (Criteria) this;
        }

        public Criteria andMomeatLessThanOrEqualTo(String value) {
            addCriterion("momEat <=", value, "momeat");
            return (Criteria) this;
        }

        public Criteria andMomeatLike(String value) {
            addCriterion("momEat like", value, "momeat");
            return (Criteria) this;
        }

        public Criteria andMomeatNotLike(String value) {
            addCriterion("momEat not like", value, "momeat");
            return (Criteria) this;
        }

        public Criteria andMomeatIn(List<String> values) {
            addCriterion("momEat in", values, "momeat");
            return (Criteria) this;
        }

        public Criteria andMomeatNotIn(List<String> values) {
            addCriterion("momEat not in", values, "momeat");
            return (Criteria) this;
        }

        public Criteria andMomeatBetween(String value1, String value2) {
            addCriterion("momEat between", value1, value2, "momeat");
            return (Criteria) this;
        }

        public Criteria andMomeatNotBetween(String value1, String value2) {
            addCriterion("momEat not between", value1, value2, "momeat");
            return (Criteria) this;
        }

        public Criteria andBabyeatIsNull() {
            addCriterion("babyEat is null");
            return (Criteria) this;
        }

        public Criteria andBabyeatIsNotNull() {
            addCriterion("babyEat is not null");
            return (Criteria) this;
        }

        public Criteria andBabyeatEqualTo(String value) {
            addCriterion("babyEat =", value, "babyeat");
            return (Criteria) this;
        }

        public Criteria andBabyeatNotEqualTo(String value) {
            addCriterion("babyEat <>", value, "babyeat");
            return (Criteria) this;
        }

        public Criteria andBabyeatGreaterThan(String value) {
            addCriterion("babyEat >", value, "babyeat");
            return (Criteria) this;
        }

        public Criteria andBabyeatGreaterThanOrEqualTo(String value) {
            addCriterion("babyEat >=", value, "babyeat");
            return (Criteria) this;
        }

        public Criteria andBabyeatLessThan(String value) {
            addCriterion("babyEat <", value, "babyeat");
            return (Criteria) this;
        }

        public Criteria andBabyeatLessThanOrEqualTo(String value) {
            addCriterion("babyEat <=", value, "babyeat");
            return (Criteria) this;
        }

        public Criteria andBabyeatLike(String value) {
            addCriterion("babyEat like", value, "babyeat");
            return (Criteria) this;
        }

        public Criteria andBabyeatNotLike(String value) {
            addCriterion("babyEat not like", value, "babyeat");
            return (Criteria) this;
        }

        public Criteria andBabyeatIn(List<String> values) {
            addCriterion("babyEat in", values, "babyeat");
            return (Criteria) this;
        }

        public Criteria andBabyeatNotIn(List<String> values) {
            addCriterion("babyEat not in", values, "babyeat");
            return (Criteria) this;
        }

        public Criteria andBabyeatBetween(String value1, String value2) {
            addCriterion("babyEat between", value1, value2, "babyeat");
            return (Criteria) this;
        }

        public Criteria andBabyeatNotBetween(String value1, String value2) {
            addCriterion("babyEat not between", value1, value2, "babyeat");
            return (Criteria) this;
        }

        public Criteria andFruitIdIsNull() {
            addCriterion("fruit_id is null");
            return (Criteria) this;
        }

        public Criteria andFruitIdIsNotNull() {
            addCriterion("fruit_id is not null");
            return (Criteria) this;
        }

        public Criteria andFruitIdEqualTo(Long value) {
            addCriterion("fruit_id =", value, "fruitId");
            return (Criteria) this;
        }

        public Criteria andFruitIdNotEqualTo(Long value) {
            addCriterion("fruit_id <>", value, "fruitId");
            return (Criteria) this;
        }

        public Criteria andFruitIdGreaterThan(Long value) {
            addCriterion("fruit_id >", value, "fruitId");
            return (Criteria) this;
        }

        public Criteria andFruitIdGreaterThanOrEqualTo(Long value) {
            addCriterion("fruit_id >=", value, "fruitId");
            return (Criteria) this;
        }

        public Criteria andFruitIdLessThan(Long value) {
            addCriterion("fruit_id <", value, "fruitId");
            return (Criteria) this;
        }

        public Criteria andFruitIdLessThanOrEqualTo(Long value) {
            addCriterion("fruit_id <=", value, "fruitId");
            return (Criteria) this;
        }

        public Criteria andFruitIdIn(List<Long> values) {
            addCriterion("fruit_id in", values, "fruitId");
            return (Criteria) this;
        }

        public Criteria andFruitIdNotIn(List<Long> values) {
            addCriterion("fruit_id not in", values, "fruitId");
            return (Criteria) this;
        }

        public Criteria andFruitIdBetween(Long value1, Long value2) {
            addCriterion("fruit_id between", value1, value2, "fruitId");
            return (Criteria) this;
        }

        public Criteria andFruitIdNotBetween(Long value1, Long value2) {
            addCriterion("fruit_id not between", value1, value2, "fruitId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table graduate_reason
     *
     * @mbg.generated do_not_delete_during_merge Sat May 18 10:47:29 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table graduate_reason
     *
     * @mbg.generated Sat May 18 10:47:29 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}